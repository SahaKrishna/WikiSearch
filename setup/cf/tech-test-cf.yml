AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Tech test users and roles

Parameters:
  Password:
    NoEcho: 'true'
    Type: String
    Description: New account password
    MinLength: '1'
    MaxLength: '41'
    ConstraintDescription: the password must be between 1 and 41 characters

Resources:
# Test RO user
  CandidateUser:
    Type: AWS::IAM::User
    Properties: 
      LoginProfile: 
        Password: !Ref Password
      UserName: ScaleFactory
  CandidateGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      GroupName: 'SFGroup'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - arn:aws:iam::aws:policy/WellArchitectedConsoleFullAccess 
  Candidates:
    Type: 'AWS::IAM::UserToGroupAddition'
    Properties:
      GroupName: !Ref CandidateGroup
      Users:
        - !Ref CandidateUser

# Terraform IAM user
  TerraformUser:
    Type: AWS::IAM::User
    Properties: 
      UserName: Terraform
  TerraformGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      GroupName: 'TerraformGroup'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
  TFUsers:
    Type: 'AWS::IAM::UserToGroupAddition'
    Properties:
      GroupName: 'TerraformGroup'
      Users:
        - !Ref TerraformUser
  TFAssumeRole:
    Type: 'AWS::IAM::Role'
    Properties: 
      RoleName: Terraform
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              AWS: 
                - !Join [ ':', [ 'arn:aws:iam:', !Ref "AWS::AccountId", 'root' ] ]
            Action: 
              - "sts:AssumeRole"
  TFAssumePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties: 
      ManagedPolicyName: "UserTFAssumeRole"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Action: 
              - "sts:AssumeRole"
            Resource:
              - arn:aws:iam::*:role/Terraform
      Groups: 
        - !Ref TerraformGroup

  # View billling policy
  ViewBillingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: "ViewBilling"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - 
            Effect: "Allow"
            Action:
              - "aws-portal:ViewBilling"
            Resource:
              - "*"
      Groups: 
        - !Ref WikicheckGroup
        - !Ref CandidateGroup


  # Deployment policy
  ECRUsagePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties: 
      ManagedPolicyName: "ECSAndECRUser"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Action:
              - "ecr:GetAuthorizationToken"
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
            Resource:
              - !Join [ ':', [ 'arn:aws:ecr:eu-west-1', !Ref "AWS::AccountId", 'repository/wiki-check-sf-tech-test*' ] ]
          - 
            Effect: "Allow"
            Action:
              - "ecs:UpdateService"
            Resource:
              - !Join [ ':', [ 'arn:aws:ecs:eu-west-1', !Ref "AWS::AccountId", 'service/wiki-check-cluster/tf-ecs-service' ] ]
          - 
            Effect: "Allow"
            Action:
              - "ecs:RunTask"
            Resource:
              - !Join [ ':', [ 'arn:aws:ecs:eu-west-1', !Ref "AWS::AccountId", 'task-definition/dbimport:*' ] ]
          - 
            Effect: "Allow"
            Action:
              - "iam:PassRole"
            Resource:
              - !Join [ ':', [ 'arn:aws:iam:', !Ref "AWS::AccountId", 'role/ecs_execution_db' ] ]
      Groups: 
        - !Ref TerraformGroup
        - !Ref WikicheckGroup

# Wikicheck IAM user
  WikicheckUser:
    Type: AWS::IAM::User
    Properties: 
      UserName: Wikicheck
  WikicheckGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      GroupName: 'WikicheckGroup'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  WikicheckUsers:
    Type: 'AWS::IAM::UserToGroupAddition'
    Properties:
      GroupName: 'WikicheckGroup'
      Users:
        - !Ref WikicheckUser
  WikicheckAssumeRole:
    Type: 'AWS::IAM::Role'
    Properties: 
      RoleName: Wikicheck
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              AWS: 
                - !Join [ ':', [ 'arn:aws:iam:', !Ref "AWS::AccountId", 'root' ] ]
            Action: 
              - "sts:AssumeRole"
  WikicheckAssumePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties: 
      ManagedPolicyName: "UserWikicheckAssumeRole"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Action: 
              - "sts:AssumeRole"
            Resource:
              - arn:aws:iam::*:role/Wikicheck
      Groups: 
        - !Ref WikicheckGroup

Outputs:
  Password:
    Value: !Ref Password
    Description: Terraform user console password
